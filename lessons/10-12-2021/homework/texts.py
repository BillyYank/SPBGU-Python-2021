'''
1) Вам надо написать класс Text, экземплярами которого будут являтся, как ни странно тексты)
Текст -- это тот же string, но умнее. Например, у текста есть метод, возвращающий n самых популярных слов,
число абзацев, автоматически определяется язык текста (это уже продвинутый уровнь)...

Ниже набор примеров использования класса. Вам надо написать класс, чтоб этот код заработал.
'''


class Text:
    def __init__(self, raw_text):
        # TODO
        pass

    def top_words(self, n):
        # TODO
        pass

    def paragraphs_count(self):
        # TODO
        pass

    @property
    def lang(self):
        # TODO
        pass


# читаем содержимое файла, передаем полученную строку на вход в конструктор (текст создается, из сырого текста)

with open('The Hitchhikers Guide to the Galaxy.txt', 'r') as f:
    text = Text(f.read())


# печатаем топ 10 слов, подумайте, как сделать так, чтоб вывод был интересным (чтоб там не было очевидных слов типа "and", "is" ...

print("Top 10 words: \n", text.top_words(10))


# сколько в тексте абзацев?

print("Paragraphs count: ", text.paragraphs_count())


# определите язык текста (способов много, гуглите)

print("Language: ", text.lang)



'''
2) Хорошо, а теперь сделаем класс Poem (стих), и, опять же, вам надо поддержать код написанный ниже. Из
интересного: вам нужно уметь итерироваться по стиху, строчка за строчкой, а так же определять стиль стихосложения (Ямб, Хорей...)
'''


class Poem(Text):
    def __init__(self, raw_text):
        # TODO может что-то еще специфичное для стихов надо будет в конструкторе сделать, а может и нет
        pass

    def __iter__(self):
        # TODO
        pass

    def __next__(self):
        #TODO
        pass

    @property
    def style(self):
        #TODO
        pass


# читаем содержимое файла, передаем полученную строку на вход в конструктор (текст создается, из сырого текста)

with open('blake.txt', 'r') as f:
    poem = Poem(f.read())


# должно работать, ведь реализованно в классе-родителе

print("Top 10 words: \n", text.top_words(10))
print("Language: ", text.lang)

# Напечатаем стихотоворение, строчка за строчкой, именно для этого вам надо написать __iter__ и __next__
for line in poem:
    print(line)


# Определите стиль стихотворения (Ямб, Хорей... вот про это). Не удивлюсь, если есть готовое библиотечное решение,
# но можно и руками сделать

